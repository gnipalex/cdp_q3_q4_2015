<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd
                        http://camel.apache.org/schema/spring 
                        http://camel.apache.org/schema/spring/camel-spring.xsd">

    <context:property-placeholder location="classpath:consumer.properties" />
    
    <context:annotation-config />

    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${app.activemq.broker.url}" />
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>
    
    <bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
        <property name="logName" value="camelTracer"/>
    </bean>

    <camel:camelContext id="camelContext" trace="false">
    
        <camel:propertyPlaceholder id="properties" location="consumer.properties" />

        <camel:endpoint id="commandsQueue" uri="activemq:queue:{{app.message.queue.incoming}}" />
        
        <camel:dataFormats>
            <camel:json id="jacksonJsonMarshaller" library="Jackson" unmarshalTypeName="com.epam.cdp.hnyp.architecture.integration.producer.ArifmeticCommand" />
        </camel:dataFormats>

        <camel:onException>
            <camel:exception>java.lang.IllegalArgumentException</camel:exception>
            <camel:exception>java.lang.UnsupportedOperationException</camel:exception>
            <camel:handled>
                <camel:constant>true</camel:constant>
            </camel:handled>
            <camel:transform>
                <camel:simple>Arifmetic command processing error : ${exception.message}</camel:simple>
            </camel:transform>
            <camel:to uri="stream:out" />
            <camel:to uri="activemq:queue:{{app.message.queue.error}}" />         
        </camel:onException>
        
        <camel:onException>
            <camel:exception>com.fasterxml.jackson.databind.JsonMappingException</camel:exception>
            <camel:exception>com.fasterxml.jackson.core.JsonParseException</camel:exception>
            <camel:handled>
                <camel:constant>true</camel:constant>
            </camel:handled>
            <camel:transform>
                <camel:simple>Json format error : ${exception.message}</camel:simple>
            </camel:transform>
            <camel:to uri="stream:out" />
            <camel:to uri="activemq:queue:{{app.message.queue.error}}" />
        </camel:onException>
        
        <camel:onException>
            <camel:exception>java.lang.RuntimeException</camel:exception>
            <camel:handled>
                <camel:constant>true</camel:constant>
            </camel:handled>
            <camel:transform>
                <camel:simple>Error occured : ${exception.message}</camel:simple>
            </camel:transform>
            <camel:to uri="stream:out" />
            <camel:to uri="activemq:queue:{{app.message.queue.error}}" />
        </camel:onException>

        <camel:route>

            <camel:from ref="commandsQueue" />
            
            <camel:unmarshal ref="jacksonJsonMarshaller" />

            <!-- calculator supports different operator mapping -->
            <camel:bean ref="arifmeticCommandBodyTransformer" method="transform" />
            
            <!-- execute command -->
            <camel:to uri="bean:arifmeticCommandExecutor?method=executeCommand" />

            <!-- write result to console and file -->
            <camel:to uri="stream:out" />
            
            <camel:setHeader headerName="CamelFileName">
                <camel:simple>{{app.message.processed.file}}</camel:simple>
            </camel:setHeader>
            
            <camel:to uri="file://{{app.message.processed.folder}}?fileExist=Append" />
            
        </camel:route> 
        
    </camel:camelContext>
    
    <bean id="arifmeticCommandBodyTransformer" class="com.epam.cdp.hnyp.architecture.integration.consumer.ArifmeticCommandBodyTransformer">
        <property name="operatorMapping">
            <map>
                <entry key="add" value="+" />
                <entry key="sub" value="-" />
                <entry key="div" value="/" />
                <entry key="mul" value="*" />
            </map>
        </property>
    </bean>
    
    <bean id="calculatorFactory" class="com.epam.cdp.hnyp.calculator.factory.impl.SimpleCalculatorFactory" />
    <bean id="calculator" class="com.epam.cdp.hnyp.calculator.Calculator" 
        factory-bean="calculatorFactory" factory-method="createCalculator" />
        
    <bean id="arifmeticCommandExecutor" class="com.epam.cdp.hnyp.architecture.integration.consumer.ArifmeticCommandExecutor" />

</beans>
