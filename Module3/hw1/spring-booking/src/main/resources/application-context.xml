<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd" >
    
    <context:annotation-config />
    
    <context:component-scan base-package="com.epam.hnyp.springbooking" />
    
    <context:property-placeholder location="jdbc.properties" />
    
    <!-- dao layer -->
    <alias name="applicationDataSource" alias="dataSource" />
    <bean id="applicationDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>
    
    <!-- daos configured with annotation support -->
    
    <!-- service layer -->
    <alias name="userServiceImpl" alias="userService" />
    <bean id="userServiceImpl" class="com.epam.hnyp.springbooking.service.impl.UserServiceImpl" />
    
    <alias name="ticketServiceImpl" alias="ticketService" />
    <bean id="ticketServiceImpl" class="com.epam.hnyp.springbooking.service.impl.TicketServiceImpl" />
        
    <alias name="eventServiceImpl" alias="eventService" />
    <bean id="eventServiceImpl" class="com.epam.hnyp.springbooking.service.impl.EventServiceImpl" />
    
    <alias name="userAccountServiceImpl" alias="userAccountService" />
    <bean id="userAccountServiceImpl" class="com.epam.hnyp.springbooking.service.impl.UserAccountServiceImpl" />
    
    <!-- facade layer -->
    <alias name="bookingFacadeImpl" alias="bookingFacade" />
    <bean id="bookingFacadeImpl" class="com.epam.hnyp.springbooking.facade.impl.BookingFacadeImpl" />

    <!-- transaction management config -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut expression="execution(* com.epam.hnyp.springbooking.service..*.*(..))" id="servicesPointcut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicesPointcut" />
    </aop:config>

</beans>